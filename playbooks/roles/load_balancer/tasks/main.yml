---
- name: Add apt-key
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Install apt-transport-https
  apt:
    name: apt-transport-https
    update_cache: yes
    state: present

- name: Add repository
  apt_repository:
    repo: deb https://artifacts.elastic.co/packages/6.x/apt stable main
    state: present

- name: Run apt-get update
  apt:
    update_cache: yes
  changed_when: False

- name: Install nginx and filebeat
  apt:
    name: "{{ item }}"
    state: present
    allow_unauthenticated: yes
  with_items:
    - nginx
    - filebeat
    - nodejs
    - npm

- name: upgrade node version
  command: npm cache clean -f

- name: upgrade node version
  command: npm install -g n

- name: upgrade node version
  command: n stable

- name: upgrade node version
  command: ln -sf /usr/local/n/versions/node/9.2.0/bin/node /usr/bin/node

- name: Create symbolic link node for nodejs
  file:
    src: /usr/bin/nodejs
    path: /usr/bin/node
    state: link

- name: Place config file for filebeat
  template:
    src: filebeat.yml.j2
    dest: /etc/filebeat/filebeat.yml
    group: root
    owner: root

- name: Place nginx.conf file for nginx
  copy:
    src: files/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root


- name: Place default config file for nginx
  copy:
    src: files/default
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root

- name: Start nginx and filebeat
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - nginx
    - filebeat

- name: stat directory where monitoring_agent will be placed
  stat:
    path: /etc/git/monitoring_agent
  register: gitstat

- name: Create folder to place monitoring agent
  file:
    path: /etc/git/monitoring_agent
    state: directory
  when: gitstat.stat.exists == False

- name: copy agent files
  copy:
    src: files/agent/{{item}}
    dest: /etc/git/monitoring_agent/
  with_items:
    - agent.js
    - package.json
    - nodes.txt
    - nginx.conf.j2

- name: Install npm packages for monitoring_agent
  shell: npm install --prefix /etc/git/monitoring_agent

- name: Start agent
  shell: forever start agent.js
  args:
    chdir: /etc/git/monitoring_agent/
  when: False

- name: Create Directory to place ssh keys for nodes
  stat:
    path: /etc/git/ssh_keys
  register: stat_keys

- name: Create Directory to place ssh keys for nodes
  file:
    path: /etc/git/ssh_keys
    state: directory
  when: stat_keys.stat.exists == False

- name: Copy Keys for nodes to load_balancer
  synchronize:
    src: files/keys/
    dest: /etc/git/ssh_keys

- name: Change permissions for ssh_keys
  file:
    path: /etc/git/ssh_keys
    state: directory
    mode: 0700
    owner: ubuntu
    group: ubuntu
    recurse: yes

- name: stat directory where auto-recovery agent will be placed
  stat:
    path: /etc/git/auto_recovery_agent
  register: gitstat2

- name: Create folder to place monitoring agent
  file:
    path: /etc/git/auto_recovery_agent
    state: directory
  when: gitstat2.stat.exists == False

- name: copy agent files
  copy:
    src: files/auto-recovery/{{item}}
    dest: /etc/git/auto_recovery_agent/
  with_items:
    - auto-recovery.js
    - package.json
    - nginx.conf.j2

- name: Install npm packages for auto_recovery_agent
  shell: npm install --prefix /etc/git/auto_recovery_agent

- name: Start agent
  shell: forever start auto-recovery.js
  args:
    chdir: /etc/git/auto_recovery_agent/
  when: False
...
